name: build

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - '**.hcl'
      - 'examples/**'
#  pull_request:
#    branches:
#      - 'master'
#      - 'releases/*'
#    paths-ignore:
#      - '**.md'

env:
  DOCKERHUB_SLUG: yousysadmin/failed-pod-cleaner
  GHCR_SLUG: ghcr.io/yousysadmin/failed-pod-cleaner
  ALPINE_IMAGE_TAG: 3.19
  GOLANG_IMAGE_TAG: 1.21.6-alpine3.19

jobs:
  build:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          NL=$'\n'
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            VERSION=${TAG%-r*}
          fi
          IMAGE_TAGS=""
          if [ "$VERSION" != "edge" ]; then
            IMAGE_TAGS="${VERSION}${NL}latest${NL}"
          else
            IMAGE_TAGS="${VERSION}${NL}"
          fi
          echo "IMAGE_TAGS<<EOF" >> $GITHUB_ENV
          echo -e "$IMAGE_TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          echo "$IMAGE_TAGS"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: ${{ env.IMAGE_TAGS }}
          labels: |
            org.opencontainers.image.title=failed-pod-cleaner
            org.opencontainers.image.description=Cleanup pod with the Failed status from cluster
            org.opencontainers.image.vendor=YouSysAdmin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 4

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: ${{ github.event_name != 'pull_request' }}
        env:
          ALPINE_VERSION: ${{ env.ALPINE_IMAGE_TAG }}
          GOLANG_VERSION: ${{ env.GOLANG_IMAGE_TAG }}

      - name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}

      - name: Check pull
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker pull ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}